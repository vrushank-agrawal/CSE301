zero = \f.\x.x
one = \f.\x.f x
succ = \n.\f.\x.f (n f x)
two = suc one
two = succ one
two
three = succ two
add = \m.\n.m succ n
mul = \m.\n.m (add n) zero
exp = \m.\n.n (mul m) one
add two three
mul two three
exp two three
:s stepon
add two two
:s applicative
add two two
:s stepoff
:s random
add two two
:s normal
exp three three
:s haskell
mul three three
:s original
add one three
:quit
